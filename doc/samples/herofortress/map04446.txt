REM *** script generated by dk-mage ver. 1.3.2 ***
REM *** generated map type: 'herofortress' ***
REM *** seed used for generation: 'Sample' ***


REM --- initialization ---

SET_GENERATE_SPEED( 500 )
START_MONEY( PLAYER0, 20000 )
MAX_CREATURES( PLAYER0, 25 )

ADD_CREATURE_TO_POOL( FLY, 10 )
ADD_CREATURE_TO_POOL( SORCEROR, 10 )
ADD_CREATURE_TO_POOL( BUG, 10 )
ADD_CREATURE_TO_POOL( SPIDER, 10 )
ADD_CREATURE_TO_POOL( TROLL, 10 )
ADD_CREATURE_TO_POOL( DEMONSPAWN, 10 )
ADD_CREATURE_TO_POOL( HELL_HOUND, 10 )
ADD_CREATURE_TO_POOL( DARK_MISTRESS, 10 )
ADD_CREATURE_TO_POOL( ORC, 10 )
ADD_CREATURE_TO_POOL( BILE_DEMON, 10 )
ADD_CREATURE_TO_POOL( DRAGON, 10 )

CREATURE_AVAILABLE( PLAYER0, FLY, 1, 1 )
CREATURE_AVAILABLE( PLAYER0, GHOST, 1, 1 )
CREATURE_AVAILABLE( PLAYER0, SORCEROR, 1, 1 )
CREATURE_AVAILABLE( PLAYER0, BUG, 1, 1 )
CREATURE_AVAILABLE( PLAYER0, SPIDER, 1, 1 )
CREATURE_AVAILABLE( PLAYER0, TROLL, 1, 1 )
CREATURE_AVAILABLE( PLAYER0, DEMONSPAWN, 1, 1 )
CREATURE_AVAILABLE( PLAYER0, HELL_HOUND, 1, 1 )
CREATURE_AVAILABLE( PLAYER0, DARK_MISTRESS, 1, 1 )
CREATURE_AVAILABLE( PLAYER0, ORC, 1, 1 )
CREATURE_AVAILABLE( PLAYER0, BILE_DEMON, 1, 1 )
CREATURE_AVAILABLE( PLAYER0, DRAGON, 1, 1 )

ROOM_AVAILABLE( ALL_PLAYERS, TREASURE, 1, 1 )
ROOM_AVAILABLE( ALL_PLAYERS, LAIR, 1, 1 )
ROOM_AVAILABLE( ALL_PLAYERS, GARDEN, 1, 1 )
ROOM_AVAILABLE( ALL_PLAYERS, TRAINING, 1, 0 )
ROOM_AVAILABLE( ALL_PLAYERS, RESEARCH, 1, 1 )
ROOM_AVAILABLE( ALL_PLAYERS, BRIDGE, 0, 0 )
ROOM_AVAILABLE( ALL_PLAYERS, WORKSHOP, 1, 0 )
ROOM_AVAILABLE( ALL_PLAYERS, GUARD_POST, 1, 0 )
ROOM_AVAILABLE( ALL_PLAYERS, PRISON, 0, 0 )
ROOM_AVAILABLE( ALL_PLAYERS, TORTURE, 0, 0 )
ROOM_AVAILABLE( ALL_PLAYERS, BARRACKS, 1, 0 )
ROOM_AVAILABLE( ALL_PLAYERS, TEMPLE, 1, 0 )
ROOM_AVAILABLE( ALL_PLAYERS, GRAVEYARD, 0, 0 )
ROOM_AVAILABLE( ALL_PLAYERS, SCAVENGER, 1, 0 )

DOOR_AVAILABLE( ALL_PLAYERS, WOOD, 1, 0 )
DOOR_AVAILABLE( ALL_PLAYERS, BRACED, 1, 0 )
DOOR_AVAILABLE( ALL_PLAYERS, STEEL, 1, 0 )
DOOR_AVAILABLE( ALL_PLAYERS, MAGIC, 1, 0 )

TRAP_AVAILABLE( ALL_PLAYERS, BOULDER, 1, 0 )
TRAP_AVAILABLE( ALL_PLAYERS, ALARM, 1, 0 )
TRAP_AVAILABLE( ALL_PLAYERS, POISON_GAS, 1, 0 )
TRAP_AVAILABLE( ALL_PLAYERS, LIGHTNING, 1, 0 )
TRAP_AVAILABLE( ALL_PLAYERS, WORD_OF_POWER, 1, 0 )
TRAP_AVAILABLE( ALL_PLAYERS, LAVA, 0, 0 )

MAGIC_AVAILABLE( ALL_PLAYERS, POWER_HAND, 1, 1 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_SLAP, 1, 1 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_POSSESS, 1, 1 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_IMP, 1, 1 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_OBEY, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_SIGHT, 0, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_CALL_TO_ARMS, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_CAVE_IN, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_HEAL_CREATURE, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_HOLD_AUDIENCE, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_LIGHTNING, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_SPEED, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_PROTECT, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_CONCEAL, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_DISEASE, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_CHICKEN, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_DESTROY_WALLS, 0, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_ARMAGEDDON, 0, 0 )


REM --- action points ---

REM graveyard guard
REM 1 -- graveyard center
IF_ACTION_POINT( 1, PLAYER0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, VAMPIRE, 1, 2, 10, 1000 )
ENDIF
REM prison technology
REM 2 -- prison center
IF_ACTION_POINT( 2, PLAYER0 )
    QUICK_INFORMATION( 1, "You have discovered how to build a prison",  )
    ROOM_AVAILABLE( PLAYER0, PRISON, 1, 1 )
ENDIF
REM dungeon heart guards
REM 3 -- dungeon heart center
IF_ACTION_POINT( 3, PLAYER0 )
    CREATE_PARTY( lord_of_the_land_1 )
    ADD_TO_PARTY( lord_of_the_land_1, KNIGHT, 10, 1000, DEFEND_PARTY, 0 )
    ADD_TO_PARTY( lord_of_the_land_1, SAMURAI, 9, 800, DEFEND_PARTY, 0 )
    ADD_TO_PARTY( lord_of_the_land_1, SAMURAI, 9, 800, DEFEND_PARTY, 0 )
    ADD_TO_PARTY( lord_of_the_land_1, SAMURAI, 9, 800, DEFEND_PARTY, 0 )
    ADD_TO_PARTY( lord_of_the_land_1, MONK, 7, 400, DEFEND_PARTY, 0 )
    ADD_TO_PARTY( lord_of_the_land_1, WIZARD, 6, 300, DEFEND_PARTY, 0 )
    ADD_TO_PARTY( lord_of_the_land_1, FAIRY, 5, 200, DEFEND_PARTY, 0 )
    ADD_TO_PARTY( lord_of_the_land_1, FAIRY, 5, 200, DEFEND_PARTY, 0 )
    CREATE_PARTY( lord_of_the_land_2 )
    ADD_TO_PARTY( lord_of_the_land_2, GIANT, 8, 600, DEFEND_PARTY, 0 )
    ADD_TO_PARTY( lord_of_the_land_2, MONK, 7, 400, DEFEND_PARTY, 0 )
    ADD_TO_PARTY( lord_of_the_land_2, WIZARD, 6, 300, DEFEND_PARTY, 0 )
    ADD_TO_PARTY( lord_of_the_land_2, FAIRY, 5, 200, DEFEND_PARTY, 0 )
    ADD_PARTY_TO_LEVEL( PLAYER_GOOD, lord_of_the_land_1, 3, 1 )
    ADD_PARTY_TO_LEVEL( PLAYER_GOOD, lord_of_the_land_2, 3, 4 )
ENDIF
REM vestibule guards of dungeon heart
REM 4 -- vestibule entrance
REM 5 -- vestibule left side
REM 6 -- vestibule right side
IF_ACTION_POINT( 4, PLAYER0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, SAMURAI, 5, 1, 9, 0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, SAMURAI, 6, 1, 8, 0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, MONK, 5, 1, 8, 0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, MONK, 6, 1, 8, 0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, SAMURAI, 5, 1, 9, 0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, SAMURAI, 6, 1, 8, 0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, MONK, 5, 1, 10, 0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, MONK, 6, 1, 9, 0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, SAMURAI, 5, 1, 7, 0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, SAMURAI, 6, 1, 8, 0 )
ENDIF


REM --- win conditions ---

IF( PLAYER0, ALL_DUNGEONS_DESTROYED == 1 )
    WIN_GAME
ENDIF
IF( PLAYER0, DUNGEON_DESTROYED == 1 )
    LOSE_GAME
ENDIF
