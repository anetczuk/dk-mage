rem *** script generated by dk-mage ver. 1.5.3 ***
rem *** generated map type: 'herofortress' ***
rem *** seed used for generation: 'Sample' ***


REM ===============  SETUP  ===============

rem - set script compatibility with Keeper FX -
LEVEL_VERSION( 1 )

SET_GENERATE_SPEED( 500 )
START_MONEY( PLAYER0, 20000 )
MAX_CREATURES( PLAYER0, 25 )

ADD_CREATURE_TO_POOL( FLY, 10 )
ADD_CREATURE_TO_POOL( SORCEROR, 10 )
ADD_CREATURE_TO_POOL( BUG, 10 )
ADD_CREATURE_TO_POOL( SPIDER, 10 )
ADD_CREATURE_TO_POOL( TROLL, 10 )
ADD_CREATURE_TO_POOL( DEMONSPAWN, 10 )
ADD_CREATURE_TO_POOL( HELL_HOUND, 10 )
ADD_CREATURE_TO_POOL( DARK_MISTRESS, 10 )
ADD_CREATURE_TO_POOL( ORC, 10 )
ADD_CREATURE_TO_POOL( BILE_DEMON, 10 )
ADD_CREATURE_TO_POOL( DRAGON, 10 )

CREATURE_AVAILABLE( PLAYER0, FLY, 1, 0 )
CREATURE_AVAILABLE( PLAYER0, GHOST, 1, 0 )
CREATURE_AVAILABLE( PLAYER0, SORCEROR, 1, 0 )
CREATURE_AVAILABLE( PLAYER0, BUG, 1, 0 )
CREATURE_AVAILABLE( PLAYER0, SPIDER, 1, 0 )
CREATURE_AVAILABLE( PLAYER0, TROLL, 1, 0 )
CREATURE_AVAILABLE( PLAYER0, DEMONSPAWN, 1, 0 )
CREATURE_AVAILABLE( PLAYER0, HELL_HOUND, 1, 0 )
CREATURE_AVAILABLE( PLAYER0, DARK_MISTRESS, 1, 0 )
CREATURE_AVAILABLE( PLAYER0, ORC, 1, 0 )
CREATURE_AVAILABLE( PLAYER0, BILE_DEMON, 1, 0 )
CREATURE_AVAILABLE( PLAYER0, DRAGON, 1, 0 )

ROOM_AVAILABLE( PLAYER0, PRISON, 3, 0 )
ROOM_AVAILABLE( PLAYER0, TORTURE, 3, 0 )
ROOM_AVAILABLE( PLAYER0, GRAVEYARD, 3, 0 )
ROOM_AVAILABLE( ALL_PLAYERS, TREASURE, 1, 1 )
ROOM_AVAILABLE( ALL_PLAYERS, LAIR, 1, 1 )
ROOM_AVAILABLE( ALL_PLAYERS, GARDEN, 1, 1 )
ROOM_AVAILABLE( ALL_PLAYERS, TRAINING, 1, 0 )
ROOM_AVAILABLE( ALL_PLAYERS, RESEARCH, 1, 1 )
ROOM_AVAILABLE( ALL_PLAYERS, BRIDGE, 0, 0 )
ROOM_AVAILABLE( ALL_PLAYERS, WORKSHOP, 1, 0 )
ROOM_AVAILABLE( ALL_PLAYERS, GUARD_POST, 1, 0 )
ROOM_AVAILABLE( ALL_PLAYERS, BARRACKS, 1, 0 )
ROOM_AVAILABLE( ALL_PLAYERS, TEMPLE, 1, 0 )
ROOM_AVAILABLE( ALL_PLAYERS, SCAVENGER, 1, 0 )

DOOR_AVAILABLE( ALL_PLAYERS, WOOD, 1, 0 )
DOOR_AVAILABLE( ALL_PLAYERS, BRACED, 1, 0 )
DOOR_AVAILABLE( ALL_PLAYERS, STEEL, 1, 0 )
DOOR_AVAILABLE( ALL_PLAYERS, MAGIC, 1, 0 )

TRAP_AVAILABLE( ALL_PLAYERS, BOULDER, 1, 0 )
TRAP_AVAILABLE( ALL_PLAYERS, ALARM, 1, 0 )
TRAP_AVAILABLE( ALL_PLAYERS, POISON_GAS, 1, 0 )
TRAP_AVAILABLE( ALL_PLAYERS, LIGHTNING, 1, 0 )
TRAP_AVAILABLE( ALL_PLAYERS, WORD_OF_POWER, 1, 0 )
TRAP_AVAILABLE( ALL_PLAYERS, LAVA, 0, 0 )

MAGIC_AVAILABLE( ALL_PLAYERS, POWER_HAND, 1, 1 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_SLAP, 1, 1 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_POSSESS, 1, 1 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_IMP, 1, 1 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_OBEY, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_SIGHT, 0, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_CALL_TO_ARMS, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_CAVE_IN, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_HEAL_CREATURE, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_HOLD_AUDIENCE, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_LIGHTNING, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_SPEED, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_PROTECT, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_CONCEAL, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_DISEASE, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_CHICKEN, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_DESTROY_WALLS, 0, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_ARMAGEDDON, 0, 0 )

rem - prevent imp bodies be taken to graveyard -
SET_CREATURE_PROPERTY( IMP, NO_CORPSE_ROTTING, 1 )

QUICK_OBJECTIVE( 1, "Coward landlord hid in fortress. Plunder surroundings and burn his pitty cottage.", ALL_PLAYERS )


REM ============  FLAGS SETUP  ============

rem - meaning of flags and timers -
rem      P0 FLAG7  -- modify stun chance after transformation of prisoners to creatures (skeletons, ghosts or conversion)
rem      PGOOD FLAG5  -- activate counter strike teams timer
rem      PGOOD FLAG6  -- scout team
rem      PGOOD FLAG7  -- random counter strike team selector
rem      PGOOD TIMER7 -- counting time to next main counter attack


REM ===========  PARTIES SETUP  ===========

rem - scout team -
CREATE_PARTY( scout_1 )
ADD_TO_PARTY( scout_1, ARCHER, 5, 500, DEFEND_PARTY, 0 )
ADD_TO_PARTY( scout_1, ARCHER, 5, 500, DEFEND_PARTY, 0 )
ADD_TO_PARTY( scout_1, THIEF, 5, 500, DEFEND_PARTY, 0 )
ADD_TO_PARTY( scout_1, THIEF, 5, 500, DEFEND_PARTY, 0 )

rem - room ambush party -
CREATE_PARTY( room_ambush_3 )
ADD_TO_PARTY( room_ambush_3, SAMURAI, 6, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( room_ambush_3, MONK, 5, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( room_ambush_3, MONK, 7, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( room_ambush_3, WIZARD, 6, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( room_ambush_3, WIZARD, 5, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( room_ambush_3, GIANT, 6, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( room_ambush_3, GIANT, 7, 500, DEFEND_LOCATION, 0 )

rem - room ambush party -
CREATE_PARTY( room_ambush_4 )
ADD_TO_PARTY( room_ambush_4, SAMURAI, 5, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( room_ambush_4, ARCHER, 6, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( room_ambush_4, ARCHER, 4, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( room_ambush_4, MONK, 4, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( room_ambush_4, MONK, 4, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( room_ambush_4, GIANT, 4, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( room_ambush_4, GIANT, 4, 500, DEFEND_LOCATION, 0 )

rem - room ambush party -
CREATE_PARTY( room_ambush_5 )
ADD_TO_PARTY( room_ambush_5, SAMURAI, 5, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( room_ambush_5, BARBARIAN, 4, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( room_ambush_5, BARBARIAN, 5, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( room_ambush_5, BARBARIAN, 4, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( room_ambush_5, BARBARIAN, 7, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( room_ambush_5, GIANT, 5, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( room_ambush_5, GIANT, 6, 500, DEFEND_LOCATION, 0 )

rem - counter strike teams -
CREATE_PARTY( main_counter_strike_1 )
ADD_TO_PARTY( main_counter_strike_1, SAMURAI, 6, 800, STEAL_SPELLS, 0 )
ADD_TO_PARTY( main_counter_strike_1, MONK, 6, 400, STEAL_SPELLS, 0 )
ADD_TO_PARTY( main_counter_strike_1, MONK, 6, 400, STEAL_SPELLS, 0 )
ADD_TO_PARTY( main_counter_strike_1, WIZARD, 6, 300, STEAL_SPELLS, 0 )
ADD_TO_PARTY( main_counter_strike_1, WIZARD, 6, 300, STEAL_SPELLS, 0 )
ADD_TO_PARTY( main_counter_strike_1, FAIRY, 6, 200, STEAL_SPELLS, 0 )
ADD_TO_PARTY( main_counter_strike_1, FAIRY, 6, 200, STEAL_SPELLS, 0 )
CREATE_PARTY( main_counter_strike_2 )
ADD_TO_PARTY( main_counter_strike_2, BARBARIAN, 6, 600, STEAL_GOLD, 0 )
ADD_TO_PARTY( main_counter_strike_2, THIEF, 6, 400, STEAL_GOLD, 0 )
ADD_TO_PARTY( main_counter_strike_2, THIEF, 6, 400, STEAL_GOLD, 0 )
ADD_TO_PARTY( main_counter_strike_2, DWARFA, 6, 300, STEAL_GOLD, 0 )
ADD_TO_PARTY( main_counter_strike_2, DWARFA, 6, 300, STEAL_GOLD, 0 )
ADD_TO_PARTY( main_counter_strike_2, ARCHER, 6, 200, STEAL_GOLD, 0 )
ADD_TO_PARTY( main_counter_strike_2, ARCHER, 6, 200, STEAL_GOLD, 0 )
CREATE_PARTY( main_counter_strike_3 )
ADD_TO_PARTY( main_counter_strike_3, GIANT, 6, 600, ATTACK_ROOMS, 0 )
ADD_TO_PARTY( main_counter_strike_3, GIANT, 6, 600, ATTACK_ROOMS, 0 )
ADD_TO_PARTY( main_counter_strike_3, SAMURAI, 6, 400, ATTACK_ROOMS, 0 )
ADD_TO_PARTY( main_counter_strike_3, SAMURAI, 6, 400, ATTACK_ROOMS, 0 )
ADD_TO_PARTY( main_counter_strike_3, MONK, 6, 300, ATTACK_ROOMS, 0 )
ADD_TO_PARTY( main_counter_strike_3, MONK, 6, 300, ATTACK_ROOMS, 0 )
ADD_TO_PARTY( main_counter_strike_3, WIZARD, 6, 200, ATTACK_ROOMS, 0 )

rem - landlord team -
CREATE_PARTY( lord_of_the_land_1 )
ADD_TO_PARTY( lord_of_the_land_1, KNIGHT, 10, 1000, DEFEND_PARTY, 0 )
ADD_TO_PARTY( lord_of_the_land_1, SAMURAI, 9, 800, DEFEND_PARTY, 0 )
ADD_TO_PARTY( lord_of_the_land_1, SAMURAI, 9, 800, DEFEND_PARTY, 0 )
ADD_TO_PARTY( lord_of_the_land_1, SAMURAI, 9, 800, DEFEND_PARTY, 0 )
ADD_TO_PARTY( lord_of_the_land_1, MONK, 7, 400, DEFEND_PARTY, 0 )
ADD_TO_PARTY( lord_of_the_land_1, WIZARD, 6, 300, DEFEND_PARTY, 0 )
ADD_TO_PARTY( lord_of_the_land_1, FAIRY, 5, 200, DEFEND_PARTY, 0 )
ADD_TO_PARTY( lord_of_the_land_1, FAIRY, 5, 200, DEFEND_PARTY, 0 )
CREATE_PARTY( lord_of_the_land_2 )
ADD_TO_PARTY( lord_of_the_land_2, GIANT, 8, 600, DEFEND_PARTY, 0 )
ADD_TO_PARTY( lord_of_the_land_2, MONK, 7, 400, DEFEND_PARTY, 0 )
ADD_TO_PARTY( lord_of_the_land_2, WIZARD, 6, 300, DEFEND_PARTY, 0 )
ADD_TO_PARTY( lord_of_the_land_2, FAIRY, 5, 200, DEFEND_PARTY, 0 )

rem - bridge turret parties -
CREATE_PARTY( bridge_turret_12 )
ADD_TO_PARTY( bridge_turret_12, WIZARD, 1, 0, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( bridge_turret_12, ARCHER, 1, 0, DEFEND_LOCATION, 0 )
CREATE_PARTY( bridge_turret_13 )
ADD_TO_PARTY( bridge_turret_13, MONK, 1, 0, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( bridge_turret_13, WIZARD, 1, 0, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( bridge_turret_13, ARCHER, 1, 0, DEFEND_LOCATION, 0 )

rem - bridge turret parties -
CREATE_PARTY( bridge_turret_15 )
ADD_TO_PARTY( bridge_turret_15, WIZARD, 1, 0, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( bridge_turret_15, ARCHER, 1, 0, DEFEND_LOCATION, 0 )
CREATE_PARTY( bridge_turret_16 )
ADD_TO_PARTY( bridge_turret_16, MONK, 1, 0, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( bridge_turret_16, WIZARD, 1, 0, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( bridge_turret_16, ARCHER, 1, 0, DEFEND_LOCATION, 0 )
CREATE_PARTY( bridge_turret_17 )
ADD_TO_PARTY( bridge_turret_17, WIZARD, 1, 0, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( bridge_turret_17, ARCHER, 1, 0, DEFEND_LOCATION, 0 )
CREATE_PARTY( bridge_turret_18 )
ADD_TO_PARTY( bridge_turret_18, MONK, 1, 0, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( bridge_turret_18, WIZARD, 1, 0, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( bridge_turret_18, ARCHER, 1, 0, DEFEND_LOCATION, 0 )

rem - gem guard party -
CREATE_PARTY( hero_trap_19 )
ADD_TO_PARTY( hero_trap_19, SAMURAI, 6, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( hero_trap_19, SAMURAI, 6, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( hero_trap_19, WITCH, 6, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( hero_trap_19, WITCH, 6, 500, DEFEND_LOCATION, 0 )

rem - gem guard party -
CREATE_PARTY( hero_trap_20 )
ADD_TO_PARTY( hero_trap_20, MONK, 5, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( hero_trap_20, MONK, 5, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( hero_trap_20, DWARFA, 5, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( hero_trap_20, DWARFA, 5, 500, DEFEND_LOCATION, 0 )

rem - gem guard party -
CREATE_PARTY( hero_trap_21 )
ADD_TO_PARTY( hero_trap_21, BARBARIAN, 7, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( hero_trap_21, BARBARIAN, 7, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( hero_trap_21, BARBARIAN, 7, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( hero_trap_21, WITCH, 7, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( hero_trap_21, WITCH, 7, 500, DEFEND_LOCATION, 0 )


REM ===============  MAIN  ================

rem - prevent prison convert snow-balling -
IF( PLAYER0, SKELETON > 2 )
    SET_GAME_RULE( PrisonSkeletonChance, 80 )
    ADD_TO_FLAG( PLAYER0, FLAG7, 1 )
ENDIF
IF( PLAYER0,SKELETON > 5 )
    SET_GAME_RULE( PrisonSkeletonChance, 60 )
    ADD_TO_FLAG( PLAYER0, FLAG7, 1 )
ENDIF
IF( PLAYER0,SKELETON > 8 )
    SET_GAME_RULE( PrisonSkeletonChance, 40 )
    ADD_TO_FLAG( PLAYER0, FLAG7, 1 )
ENDIF
IF( PLAYER0,GHOST > 3 )
    SET_GAME_RULE( GhostConvertChance, 30 )
    ADD_TO_FLAG( PLAYER0, FLAG7, 1 )
ENDIF

rem - prevent torture convert snow-balling -
IF( PLAYER0, CREATURES_CONVERTED > 2 )
    SET_GAME_RULE( TortureDeathChance, 33 )
    ADD_TO_FLAG( PLAYER0, FLAG7, 1 )
ENDIF
IF( PLAYER0, CREATURES_CONVERTED > 5 )
    SET_GAME_RULE( TortureDeathChance, 50 )
    ADD_TO_FLAG( PLAYER0, FLAG7, 1 )
ENDIF
IF( PLAYER0,CREATURES_CONVERTED > 8 )
    SET_GAME_RULE( TortureDeathChance, 80 )
    ADD_TO_FLAG( PLAYER0, FLAG7, 1 )
ENDIF

rem - modify stun chance -
IF( PLAYER0,FLAG7 >= 1 )
    SET_GAME_RULE( StunEvilEnemyChance, 80 )
    SET_GAME_RULE( StunGoodEnemyChance, 80 )
ENDIF
IF( PLAYER0,FLAG7 >= 2 )
    SET_GAME_RULE( StunGoodEnemyChance, 60 )
ENDIF
IF( PLAYER0,FLAG7 >= 3 )
    SET_GAME_RULE( StunEvilEnemyChance, 60 )
    SET_GAME_RULE( StunGoodEnemyChance, 50 )
ENDIF
IF( PLAYER0,FLAG7 >= 4 )
    SET_GAME_RULE( StunGoodEnemyChance, 30 )
ENDIF

rem - set sacrifice limits -
IF( PLAYER0, SACRIFICED[IMP] >= 9 )
    REMOVE_SACRIFICE_RECIPE( IMP )
ENDIF
IF( PLAYER0, REWARDED[BILE_DEMON] >= 1 )
    REMOVE_SACRIFICE_RECIPE( SPIDER, SPIDER, SPIDER )
ENDIF
IF( PLAYER0, REWARDED[DARK_MISTRESS] >= 1 )
    REMOVE_SACRIFICE_RECIPE( SPIDER, BUG )
ENDIF
IF( PLAYER0, REWARDED[TENTACLE] >= 1 )
    REMOVE_SACRIFICE_RECIPE( SPIDER, TROLL )
ENDIF
IF( PLAYER0, REWARDED[HORNY] >= 1 )
    REMOVE_SACRIFICE_RECIPE( TROLL, BILE_DEMON, DARK_MISTRESS )
ENDIF

rem - set graveyard limits -
IF( PLAYER0, VAMPIRE >= 2 )
    SET_GAME_RULE( BodiesForVampire, 15 )
ENDIF
IF( PLAYER0, VAMPIRE >= 4 )
    SET_GAME_RULE( BodiesForVampire, 20 )
ENDIF
IF( PLAYER0, VAMPIRE >= 6 )
    SET_GAME_RULE( BodiesForVampire, 25 )
ENDIF


rem - send scout team -
IF( PLAYER_GOOD, FLAG6 < 100 )
    IF( PLAYER0, TOTAL_GOLD_MINED > 16000 )
        SET_FLAG( PLAYER_GOOD, FLAG6, 1 )
        IF_SLAB_OWNER( 74, 43, PLAYER0 )
            rem hero gate 1 captured
            SET_FLAG( PLAYER_GOOD, FLAG6, 2 )
            IF_SLAB_OWNER( 60, 14, PLAYER0 )
                rem hero gate 2 captured
                rem no more hero gates
                SET_FLAG( PLAYER_GOOD, FLAG6, 100 )
            ENDIF
            IF( PLAYER_GOOD, FLAG6 == 2 )
                rem hero gate 2 not captured
                QUICK_INFORMATION( 1, "Your activity was noticed by defenders. Prepare for incoming confrontation.", ALL_PLAYERS )
                ADD_TUNNELLER_PARTY_TO_LEVEL( PLAYER_GOOD, scout_1, -2, DUNGEON, 0, 5, 1000 )
                SET_FLAG( PLAYER_GOOD, FLAG6, 100 )
            ENDIF
        ENDIF
        IF( PLAYER_GOOD, FLAG6 == 1 )
            rem hero gate 1 not captured
            QUICK_INFORMATION( 2, "Your activity was noticed by defenders. Prepare for incoming confrontation.", ALL_PLAYERS )
            ADD_TUNNELLER_PARTY_TO_LEVEL( PLAYER_GOOD, scout_1, -1, DUNGEON, 0, 5, 1000 )
            SET_FLAG( PLAYER_GOOD, FLAG6, 100 )
        ENDIF
    ENDIF
ENDIF

rem - start counter attacks after releasing scout team -
IF( PLAYER_GOOD, FLAG5 == 1 )
    SET_TIMER( PLAYER_GOOD, TIMER7 )
    ADD_TO_FLAG( PLAYER_GOOD, FLAG5, 1 )
ENDIF

rem - main counter attacks triggered each approx. 5 min -
IF( PLAYER_GOOD, FLAG5 < 5 )
    IF( PLAYER_GOOD, TIMER7 > 6000 )
        NEXT_COMMAND_REUSABLE
        RANDOMISE_FLAG( PLAYER_GOOD, FLAG7, 3 )
        IF( PLAYER_GOOD, FLAG7 == 1 )
            NEXT_COMMAND_REUSABLE
            ADD_PARTY_TO_LEVEL( PLAYER_GOOD, main_counter_strike_1, -255, 1 )
            PLAY_MESSAGE( PLAYER0, SPEECH, 112 )
        ENDIF
        IF( PLAYER_GOOD, FLAG7 == 2 )
            NEXT_COMMAND_REUSABLE
            ADD_PARTY_TO_LEVEL( PLAYER_GOOD, main_counter_strike_2, -255, 1 )
            PLAY_MESSAGE( PLAYER0, SPEECH, 112 )
        ENDIF
        IF( PLAYER_GOOD, FLAG7 == 3 )
            NEXT_COMMAND_REUSABLE
            ADD_PARTY_TO_LEVEL( PLAYER_GOOD, main_counter_strike_3, -255, 1 )
            PLAY_MESSAGE( PLAYER0, SPEECH, 112 )
        ENDIF
        NEXT_COMMAND_REUSABLE
        ADD_TO_FLAG( PLAYER_GOOD, FLAG5, 1 )
        NEXT_COMMAND_REUSABLE
        SET_TIMER( PLAYER_GOOD, TIMER7 )
    ENDIF
ENDIF

rem - reveal hidden gem -
IF_SLAB_TYPE( 3, 36, PATH )
    CHANGE_SLAB_TYPE( 2, 36, GEMS )
ENDIF


REM ===========  ACTION POINTS  ===========

rem - start counter strike timers -
rem 1 -- entrance center
IF_ACTION_POINT( 1, PLAYER0 )
    IF( PLAYER_GOOD, FLAG5 < 1 )
        SET_FLAG( PLAYER_GOOD, FLAG5, 1 )
    ENDIF
ENDIF

rem - start counter strike timers -
rem 2 -- entrance center
IF_ACTION_POINT( 2, PLAYER0 )
    IF( PLAYER_GOOD, FLAG5 < 1 )
        SET_FLAG( PLAYER_GOOD, FLAG5, 1 )
    ENDIF
ENDIF

rem - room ambush party -
rem 3 -- ambush point
IF_ACTION_POINT( 3, PLAYER0 )
    ADD_PARTY_TO_LEVEL( PLAYER_GOOD, room_ambush_3, 3, 2 )
ENDIF

rem - room ambush party -
rem 4 -- ambush point
IF_ACTION_POINT( 4, PLAYER0 )
    ADD_PARTY_TO_LEVEL( PLAYER_GOOD, room_ambush_4, 4, 2 )
ENDIF

rem - room ambush party -
rem 5 -- ambush point
IF_ACTION_POINT( 5, PLAYER0 )
    ADD_PARTY_TO_LEVEL( PLAYER_GOOD, room_ambush_5, 5, 2 )
ENDIF

rem graveyard guard
rem 6 -- graveyard center
IF_ACTION_POINT( 6, PLAYER0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, VAMPIRE, 6, 2, 7, 1000 )
ENDIF

rem vestibule guards of dungeon heart
rem 7 -- vestibule entrance
rem 8 -- vestibule left side
rem 9 -- vestibule right side
IF_ACTION_POINT( 7, PLAYER0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, SAMURAI, 8, 1, 9, 0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, SAMURAI, 9, 1, 8, 0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, MONK, 8, 1, 8, 0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, MONK, 9, 1, 10, 0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, SAMURAI, 8, 1, 8, 0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, SAMURAI, 9, 1, 8, 0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, MONK, 8, 1, 9, 0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, MONK, 9, 1, 10, 0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, SAMURAI, 8, 1, 8, 0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, SAMURAI, 9, 1, 10, 0 )
ENDIF

rem dungeon heart guards
rem 10 -- dungeon heart center
IF_ACTION_POINT( 10, PLAYER0 )
    ADD_PARTY_TO_LEVEL( PLAYER_GOOD, lord_of_the_land_1, 10, 1 )
    ADD_PARTY_TO_LEVEL( PLAYER_GOOD, lord_of_the_land_2, 10, 4 )
    rem vestibule guards repeated
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, SAMURAI, 8, 1, 9, 0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, SAMURAI, 9, 1, 8, 0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, MONK, 8, 1, 8, 0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, MONK, 9, 1, 10, 0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, SAMURAI, 8, 1, 8, 0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, SAMURAI, 9, 1, 8, 0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, MONK, 8, 1, 9, 0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, MONK, 9, 1, 10, 0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, SAMURAI, 8, 1, 8, 0 )
    ADD_CREATURE_TO_LEVEL( PLAYER_GOOD, SAMURAI, 9, 1, 10, 0 )
ENDIF

rem - bridge turrets -
rem 11 -- bridge center
IF_ACTION_POINT( 11, PLAYER0 )
    ADD_PARTY_TO_LEVEL( PLAYER_GOOD, bridge_turret_12, 12, 1 )
    ADD_PARTY_TO_LEVEL( PLAYER_GOOD, bridge_turret_13, 13, 1 )
ENDIF

rem - bridge turrets -
rem 14 -- bridge center
IF_ACTION_POINT( 14, PLAYER0 )
    ADD_PARTY_TO_LEVEL( PLAYER_GOOD, bridge_turret_15, 15, 1 )
    ADD_PARTY_TO_LEVEL( PLAYER_GOOD, bridge_turret_16, 16, 1 )
    ADD_PARTY_TO_LEVEL( PLAYER_GOOD, bridge_turret_17, 17, 1 )
    ADD_PARTY_TO_LEVEL( PLAYER_GOOD, bridge_turret_18, 18, 1 )
ENDIF

rem - gem guard party -
rem 19 -- ambush point
IF_ACTION_POINT( 19, PLAYER0 )
    ADD_PARTY_TO_LEVEL( PLAYER_GOOD, hero_trap_19, 19, 2 )
ENDIF

rem - gem guard party -
rem 20 -- ambush point
IF_ACTION_POINT( 20, PLAYER0 )
    ADD_PARTY_TO_LEVEL( PLAYER_GOOD, hero_trap_20, 20, 2 )
ENDIF

rem - gem guard party -
rem 21 -- ambush point
IF_ACTION_POINT( 21, PLAYER0 )
    ADD_PARTY_TO_LEVEL( PLAYER_GOOD, hero_trap_21, 21, 2 )
ENDIF


REM ===========  END CONDITIONS  ==========

rem - require killing all heroes -
IF( PLAYER_GOOD, DUNGEON_DESTROYED == 1 )
    IF_CONTROLS( PLAYER_GOOD, GOOD_CREATURES > 0 )
        QUICK_OBJECTIVE( 2, "Well done keeper! Find and get rid of rest of fortress defenders!", ALL_PLAYERS )
    ENDIF
    IF_CONTROLS( PLAYER_GOOD, GOOD_CREATURES == 0 )
        WIN_GAME
    ENDIF
ENDIF

IF( PLAYER0, DUNGEON_DESTROYED == 1 )
    LOSE_GAME
ENDIF
