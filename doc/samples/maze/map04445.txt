rem *** script generated by dk-mage ver. 1.5.1 ***
rem *** generated map type: 'maze' ***
rem *** seed used for generation: 'Sample' ***


REM ===============  SETUP  ===============
rem - set script compatibility with Keeper FX -
LEVEL_VERSION( 1 )

SET_GENERATE_SPEED( 500 )
COMPUTER_PLAYER( PLAYER1, 0 )
START_MONEY( PLAYER0, 20000 )
START_MONEY( PLAYER1, 250000 )
MAX_CREATURES( PLAYER0, 10 )
MAX_CREATURES( PLAYER1, 50 )

ADD_CREATURE_TO_POOL( TUNNELLER, 20 )
ADD_CREATURE_TO_POOL( FAIRY, 20 )
ADD_CREATURE_TO_POOL( ARCHER, 20 )
ADD_CREATURE_TO_POOL( WITCH, 20 )
ADD_CREATURE_TO_POOL( WIZARD, 20 )
ADD_CREATURE_TO_POOL( THIEF, 20 )
ADD_CREATURE_TO_POOL( MONK, 20 )
ADD_CREATURE_TO_POOL( DWARFA, 20 )
ADD_CREATURE_TO_POOL( BARBARIAN, 20 )
ADD_CREATURE_TO_POOL( SAMURAI, 20 )
ADD_CREATURE_TO_POOL( GIANT, 20 )
ADD_CREATURE_TO_POOL( KNIGHT, 20 )

CREATURE_AVAILABLE( PLAYER0, TUNNELLER, 1, 0 )
CREATURE_AVAILABLE( PLAYER0, FAIRY, 1, 0 )
CREATURE_AVAILABLE( PLAYER0, ARCHER, 1, 0 )
CREATURE_AVAILABLE( PLAYER0, WITCH, 1, 0 )
CREATURE_AVAILABLE( PLAYER0, WIZARD, 1, 0 )
CREATURE_AVAILABLE( PLAYER0, THIEF, 1, 0 )
CREATURE_AVAILABLE( PLAYER0, MONK, 1, 0 )
CREATURE_AVAILABLE( PLAYER0, DWARFA, 1, 0 )
CREATURE_AVAILABLE( PLAYER0, BARBARIAN, 1, 0 )
CREATURE_AVAILABLE( PLAYER0, SAMURAI, 1, 0 )
CREATURE_AVAILABLE( PLAYER0, GIANT, 1, 0 )
CREATURE_AVAILABLE( PLAYER0, KNIGHT, 1, 0 )
CREATURE_AVAILABLE( PLAYER0, FLY, 0, 0 )
CREATURE_AVAILABLE( PLAYER0, GHOST, 0, 0 )
CREATURE_AVAILABLE( PLAYER0, SORCEROR, 0, 0 )
CREATURE_AVAILABLE( PLAYER0, BUG, 0, 0 )
CREATURE_AVAILABLE( PLAYER0, SPIDER, 0, 0 )
CREATURE_AVAILABLE( PLAYER0, TROLL, 0, 0 )
CREATURE_AVAILABLE( PLAYER0, DEMONSPAWN, 0, 0 )
CREATURE_AVAILABLE( PLAYER0, HELL_HOUND, 0, 0 )
CREATURE_AVAILABLE( PLAYER0, DARK_MISTRESS, 0, 0 )
CREATURE_AVAILABLE( PLAYER0, ORC, 0, 0 )
CREATURE_AVAILABLE( PLAYER0, BILE_DEMON, 0, 0 )
CREATURE_AVAILABLE( PLAYER0, DRAGON, 0, 0 )

ROOM_AVAILABLE( PLAYER0, TORTURE, 0, 0 )
ROOM_AVAILABLE( ALL_PLAYERS, TREASURE, 1, 1 )
ROOM_AVAILABLE( ALL_PLAYERS, LAIR, 1, 1 )
ROOM_AVAILABLE( ALL_PLAYERS, GARDEN, 1, 1 )
ROOM_AVAILABLE( ALL_PLAYERS, TRAINING, 1, 0 )
ROOM_AVAILABLE( ALL_PLAYERS, RESEARCH, 1, 1 )
ROOM_AVAILABLE( ALL_PLAYERS, BRIDGE, 0, 0 )
ROOM_AVAILABLE( ALL_PLAYERS, WORKSHOP, 1, 0 )
ROOM_AVAILABLE( ALL_PLAYERS, GUARD_POST, 1, 0 )
ROOM_AVAILABLE( ALL_PLAYERS, PRISON, 1, 0 )
ROOM_AVAILABLE( ALL_PLAYERS, BARRACKS, 1, 0 )
ROOM_AVAILABLE( ALL_PLAYERS, TEMPLE, 1, 0 )
ROOM_AVAILABLE( ALL_PLAYERS, GRAVEYARD, 1, 0 )
ROOM_AVAILABLE( ALL_PLAYERS, SCAVENGER, 1, 0 )

DOOR_AVAILABLE( ALL_PLAYERS, WOOD, 1, 0 )
DOOR_AVAILABLE( ALL_PLAYERS, BRACED, 1, 0 )
DOOR_AVAILABLE( ALL_PLAYERS, STEEL, 1, 0 )
DOOR_AVAILABLE( ALL_PLAYERS, MAGIC, 1, 0 )

TRAP_AVAILABLE( ALL_PLAYERS, BOULDER, 1, 0 )
TRAP_AVAILABLE( ALL_PLAYERS, ALARM, 1, 0 )
TRAP_AVAILABLE( ALL_PLAYERS, POISON_GAS, 1, 0 )
TRAP_AVAILABLE( ALL_PLAYERS, LIGHTNING, 1, 0 )
TRAP_AVAILABLE( ALL_PLAYERS, WORD_OF_POWER, 1, 0 )
TRAP_AVAILABLE( ALL_PLAYERS, LAVA, 0, 0 )

MAGIC_AVAILABLE( ALL_PLAYERS, POWER_HAND, 1, 1 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_SLAP, 1, 1 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_POSSESS, 1, 1 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_IMP, 1, 1 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_OBEY, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_SIGHT, 0, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_CALL_TO_ARMS, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_CAVE_IN, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_HEAL_CREATURE, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_HOLD_AUDIENCE, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_LIGHTNING, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_SPEED, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_PROTECT, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_CONCEAL, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_DISEASE, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_CHICKEN, 1, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_DESTROY_WALLS, 0, 0 )
MAGIC_AVAILABLE( ALL_PLAYERS, POWER_ARMAGEDDON, 0, 0 )


REM ===========  PARTIES SETUP  ===========

rem - gem guard party -
CREATE_PARTY( hero_trap_1 )
ADD_TO_PARTY( hero_trap_1, WIZARD, 6, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( hero_trap_1, WIZARD, 6, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( hero_trap_1, GIANT, 6, 500, DEFEND_LOCATION, 0 )

rem - gem guard party -
CREATE_PARTY( hero_trap_2 )
ADD_TO_PARTY( hero_trap_2, MONK, 7, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( hero_trap_2, MONK, 7, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( hero_trap_2, MONK, 7, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( hero_trap_2, MONK, 7, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( hero_trap_2, MONK, 7, 500, DEFEND_LOCATION, 0 )

rem - gem guard party -
CREATE_PARTY( hero_trap_3 )
ADD_TO_PARTY( hero_trap_3, DWARFA, 7, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( hero_trap_3, DWARFA, 7, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( hero_trap_3, GIANT, 7, 500, DEFEND_LOCATION, 0 )

rem - gem guard party -
CREATE_PARTY( hero_trap_4 )
ADD_TO_PARTY( hero_trap_4, DWARFA, 4, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( hero_trap_4, DWARFA, 4, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( hero_trap_4, ARCHER, 4, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( hero_trap_4, ARCHER, 4, 500, DEFEND_LOCATION, 0 )

rem - gem guard party -
CREATE_PARTY( hero_trap_5 )
ADD_TO_PARTY( hero_trap_5, SAMURAI, 6, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( hero_trap_5, SAMURAI, 6, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( hero_trap_5, SAMURAI, 6, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( hero_trap_5, DWARFA, 6, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( hero_trap_5, DWARFA, 6, 500, DEFEND_LOCATION, 0 )

rem - gem guard party -
CREATE_PARTY( hero_trap_6 )
ADD_TO_PARTY( hero_trap_6, WIZARD, 6, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( hero_trap_6, WIZARD, 6, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( hero_trap_6, GIANT, 6, 500, DEFEND_LOCATION, 0 )
ADD_TO_PARTY( hero_trap_6, GIANT, 6, 500, DEFEND_LOCATION, 0 )


REM ===============  MAIN  ================

rem - reveal hidden gem -
IF_SLAB_TYPE( 5, 72, PATH )
    CHANGE_SLAB_TYPE( 4, 72, GEMS )
ENDIF

rem - reveal hidden gem -
IF_SLAB_TYPE( 81, 76, PATH )
    CHANGE_SLAB_TYPE( 82, 76, GEMS )
ENDIF


REM ===========  ACTION POINTS  ===========

rem - gem guard party -
rem 1 -- ambush point
IF_ACTION_POINT( 1, PLAYER0 )
    ADD_PARTY_TO_LEVEL( PLAYER_GOOD, hero_trap_1, 1, 2 )
ENDIF

rem - gem guard party -
rem 2 -- ambush point
IF_ACTION_POINT( 2, PLAYER0 )
    ADD_PARTY_TO_LEVEL( PLAYER_GOOD, hero_trap_2, 2, 2 )
ENDIF

rem - gem guard party -
rem 3 -- ambush point
IF_ACTION_POINT( 3, PLAYER0 )
    ADD_PARTY_TO_LEVEL( PLAYER_GOOD, hero_trap_3, 3, 2 )
ENDIF

rem - gem guard party -
rem 4 -- ambush point
IF_ACTION_POINT( 4, PLAYER0 )
    ADD_PARTY_TO_LEVEL( PLAYER_GOOD, hero_trap_4, 4, 2 )
ENDIF

rem - gem guard party -
rem 5 -- ambush point
IF_ACTION_POINT( 5, PLAYER0 )
    ADD_PARTY_TO_LEVEL( PLAYER_GOOD, hero_trap_5, 5, 2 )
ENDIF

rem - gem guard party -
rem 6 -- ambush point
IF_ACTION_POINT( 6, PLAYER0 )
    ADD_PARTY_TO_LEVEL( PLAYER_GOOD, hero_trap_6, 6, 2 )
ENDIF


REM ===========  END CONDITIONS  ==========
IF( PLAYER0, ALL_DUNGEONS_DESTROYED == 1 )
    WIN_GAME
ENDIF
IF( PLAYER0, DUNGEON_DESTROYED == 1 )
    LOSE_GAME
ENDIF
